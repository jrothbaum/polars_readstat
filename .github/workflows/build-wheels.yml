name: Build and publish polars_readstat
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
          - os: macos-latest
            rust-target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
        shell: bash

      # Add uv to PATH (Simplified)
      - name: Add uv to PATH
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        shell: bash

      # REMOVED Linux dependency installation here - it will be done inside the container

      - name: Install ReadStat dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf automake libtool

      - name: Install ReadStat dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install msys2 llvm --params "'/InstallDir:C:\tools\LLVM'" # Specify install dir for predictability
          C:\tools\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed mingw-w64-x86_64-toolchain autoconf automake-wrapper libtool make mingw-w64-x86_64-pkg-config mingw-w64-x86_64-zlib"
          echo "C:\tools\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append # Add mingw tools to PATH
          echo "C:\tools\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append # Add msys tools like bash to PATH
          echo "LIBCLANG_PATH=C:\tools\LLVM\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append # Use specified install dir
        shell: powershell

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Install build dependencies
        run: |
          uv pip install --system maturin
        shell: bash

      - name: Build wheels (Linux)
        if: matrix.os == 'ubuntu-latest'
        # Use environment variable to install dependencies inside the manylinux container
        env:
          CIBW_BEFORE_BUILD_LINUX: >
            apt-get update &&
            apt-get install -y --no-install-recommends autoconf automake libtool zlib1g-dev build-essential pkg-config libclang-dev clang llvm-dev
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.rust-target }}
          manylinux: auto # Or specify a version like 'manylinux2014'
          args: --release --strip --out dist
          # singlefile: true # Deprecated in maturin 1.0, use --profile release-lto in args if needed for size

      - name: Build wheels (macOS & Windows)
        if: matrix.os != 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.rust-target }}
          args: --release --strip --out dist
          # singlefile: true # Deprecated

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist