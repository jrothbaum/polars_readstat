name: Build and publish polars_readstat
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
          - os: macos-latest
            rust-target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
        shell: bash
        
      - name: Add uv to PATH (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        shell: bash
        
      - name: Add uv to PATH (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        shell: bash
        
      - name: Install ReadStat dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool zlib1g-dev build-essential pkg-config libclang-dev clang llvm-dev
          
          
          
          
          # Find and set the libclang path
          CLANG_LIB=$(dpkg -L libclang-dev | grep libclang.so)
          if [ -z "$CLANG_LIB" ]; then
            CLANG_LIB=$(find /usr -name libclang.so 2>/dev/null | head -n 1)
          fi
      - name: Install ReadStat dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf automake libtool
          
      - name: Install ReadStat dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install msys2 llvm
          C:\tools\msys64\usr\bin\bash -lc "pacman -S --noconfirm autoconf automake libtool make pkg-config zlib-devel"
          echo "C:\tools\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "LIBCLANG_PATH=C:\Program Files\LLVM\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}
          
      - name: Install build dependencies
        run: |
          uv pip install --system maturin
        shell: bash
        
      - name: Build wheels (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.rust-target }}
          manylinux: auto
          args: --release --strip --out dist
          singlefile: true
          
      - name: Build wheels (macOS & Windows)
        if: matrix.os != 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.rust-target }}
          args: --release --strip --out dist
          singlefile: true
          
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist