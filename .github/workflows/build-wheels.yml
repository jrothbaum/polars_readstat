name: Build and publish polars_readstat
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
          - os: macos-latest
            rust-target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
        shell: bash

      - name: Add uv to PATH
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        shell: bash

      - name: Install ReadStat dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf automake libtool

      - name: Install ReadStat dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install msys2 llvm
          C:\tools\msys64\usr\bin\bash -lc "pacman -S --noconfirm autoconf automake libtool make pkg-config zlib-devel"
          echo "C:\tools\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "LIBCLANG_PATH=C:\Program Files\LLVM\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Install build dependencies
        run: |
          uv pip install --system maturin
        shell: bash
      - name: Install LLVM & Clang (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev llvm-dev clang
          # Check which LLVM version is installed
          ls -la /usr/lib/ | grep llvm
          # Print clang location
          which clang
          # Print llvm-config output
          llvm-config --version
          llvm-config --libdir
          llvm-config --includedir
          # Set correct paths based on actual installation
          echo "LIBCLANG_PATH=$(llvm-config --libdir)" >> $GITHUB_ENV
          echo "BINDGEN_EXTRA_CLANG_ARGS=-I$(llvm-config --includedir)" >> $GITHUB_ENV    
      - name: Build wheels (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        env:
          # These will now use the values set by the previous step
          RUST_BACKTRACE: full
        with:
          target: ${{ matrix.rust-target }}
          manylinux: 'manylinux_2_28'
          args: --release --strip --out dist -vv
          before-script-linux: |
            # Install apt dependencies
            apt-get update
            apt-get install -y wget apt-utils

            # Add LLVM repository for newer versions
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main" > /etc/apt/sources.list.d/llvm.list
            apt-get update

            # Install specific LLVM/Clang version (15 should be recent enough)
            apt-get install -y clang-15 libclang-15-dev

            # Find and set the libclang path
            export LIBCLANG_PATH=$(find /usr/lib -name "libclang.so*" | head -n 1 | xargs dirname)
            if [ -z "$LIBCLANG_PATH" ]; then 
              # If libclang.so is not found, look for versioned libraries and create symlink
              VERSIONED_LIBCLANG=$(find /usr/lib -name "libclang-*.so*" | head -n 1)
              if [ -n "$VERSIONED_LIBCLANG" ]; then
                LIBCLANG_PATH=$(dirname $VERSIONED_LIBCLANG)
                ln -s $VERSIONED_LIBCLANG $LIBCLANG_PATH/libclang.so
                echo "Created symlink from $VERSIONED_LIBCLANG to $LIBCLANG_PATH/libclang.so"
              fi
            fi

            # If still not found, try with apt-file
            if [ -z "$LIBCLANG_PATH" ]; then
              apt-get install -y apt-file
              apt-file update
              LIBCLANG_PATH=$(apt-file search libclang | grep "\.so" | head -n 1 | awk '{print $1}' | xargs dirname)
            fi

            echo "Found LIBCLANG_PATH: $LIBCLANG_PATH"
            
            # Export variables for the build
            export LIBCLANG_PATH
            echo "LIBCLANG_PATH=$LIBCLANG_PATH" >> $GITHUB_ENV
            
            # Make sure clang is in PATH
            export PATH="/usr/lib/llvm-15/bin:$PATH"
            echo "PATH=$PATH" >> $GITHUB_ENV
            
            # Verify installation
            ls -la $LIBCLANG_PATH
            clang-15 --version
      - name: Build wheels (macOS & Windows)
        if: matrix.os != 'ubuntu-latest'
        
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.rust-target }}
          args: --release --strip --out dist
          singlefile: true 

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist